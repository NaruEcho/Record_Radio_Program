name: Radio Stream Capture

on:
  workflow_dispatch:

jobs:
  radio-stream-capture:
    runs-on: ubuntu-latest
    
    env:
      WG_CONF: ${{ secrets.WG_VPN_CONF }}
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: sound-ci-setup
        uses: LABSN/sound-ci-helpers@v1

      - name: Upgrade pip and install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r scripts/requirements.txt

      - name: Install library
        run: |
            sudo apt-get update
            sudo apt-get install -y wireguard jq ffmpeg fonts-noto

      - name: Create WireGuard config file
        run: |
            echo "$WG_CONF" | sudo tee /etc/wireguard/wg0.conf > /dev/null
            sudo ln -s /usr/bin/resolvectl /usr/local/bin/resolvconf
            sudo chmod 600 /etc/wireguard/wg0.conf

      - name: Start WireGuard VPN
        run: |
            sudo wg-quick up wg0
            sleep 20

      - name: Verify VPN Connection
        run: |
            sudo wg | grep -v 'public key' | grep -v 'private key'
            sleep 10

      - name: Check IP and Security
        run: |
            chmod +x scripts/get_info.sh
            scripts/get_info.sh

      - name: Save info JSON and download
        run: |
            full_output=$(python scripts/setup_and_get_info.py)
            echo "$full_output"
            echo "Run Pyhon script successfully"
            json_output=$(echo "$full_output" | grep -o '\[.*\]' | jq '.')
            echo "Filtered json data successfully"
            echo "$json_output"
            if [ -n "$json_output" ] && [ "$json_output" != "[]" ]; then
                echo "$json_output" | jq -c '.[]' | while IFS= read -r item; do
                    streaming_url=$(echo "$item" | jq -r '.streaming_url')
                    audio_path=$(echo "$item" | jq -r '.audio_path')
                    echo "Downloading: $streaming_url to $audio_path"
                    ffmpeg -http_seekable 0 -i "$streaming_url" -vn -acodec aac "$audio_path"
                    echo "Saved: $audio_path"
                done
            else
                echo "No data to process"
            fi

      - name: End WireGuard VPN
        if: always() # どんな状態でも必ず実行する
        run: sudo wg-quick down wg0
