name: Radio Stream Capture

on:
  workflow_dispatch:

jobs:
  radio-stream-capture:
    runs-on: ubuntu-latest
    
    env:
      WG_CONF: ${{ secrets.WG_VPN_CONF }}
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: sound-ci-setup
        uses: LABSN/sound-ci-helpers@v1

      - name: Upgrade pip and install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r scripts/requirements.txt

      - name: Install library
        run: |
            set -e
            sudo apt update
            sudo apt install -y wireguard jq ffmpeg

      - name: Create WireGuard config file
        run: |
            if [ -z "$WG_CONF" ]; then
                echo "WG_CONF environment variable is not set"
                exit 1
            fi
            echo "$WG_CONF" | sudo tee /etc/wireguard/wg0.conf > /dev/null
            sudo ln -s /usr/bin/resolvectl /usr/local/bin/resolvconf
            sudo chmod 600 /etc/wireguard/wg0.conf

      - name: Start WireGuard VPN
        run: |
            sudo wg-quick up wg0
            sleep 60

      - name: Verify VPN Connection
        run: |
            sudo wg | grep -v 'public key' | grep -v 'private key'
            sleep 60

      - name: Check IP and Security
        run: |
            chmod +x scripts/get_info.sh
            scripts/get_info.sh
        continue-on-error: true

      - name: Save info JSON
        run: python scripts/setup_and_get_info.py

      - name: Convert m3u8 to m4a
        run: |
            if [ ! -s "scripts/temp.txt" ]; then
                echo "何もダウンロードするものがありません。"
                exit 0
            fi
            while IFS= read -r line; do
                sleep 10
                if echo "$line" | grep -q "^streaming_url:"; then
                    streaming_url=$(echo "$line" | sed 's/^streaming_url://')
                sleep 10
                elif echo "$line" | grep -q "^audio_path:"; then
                    audio_path=$(echo "$line" | sed 's/^audio_path://')
                    sleep 10
                    if [ -n "$streaming_url" ] && [ -n "$audio_path" ]; then
                        if ffmpeg -http_seekable 0 -i "$streaming_url" -ab 46k -ac 2 -ar 24000 -write_xing 0 "$audio_path" 2>/dev/null; then
                            echo "ffmpeg コマンドが成功しました: $streaming_url -> $audio_path"
                            sleep 30
                        else
                            echo "ffmpeg コマンドが失敗しました: $streaming_url -> $audio_path"
                        fi
                        streaming_url=""
                        audio_path=""
                        sleep 30
                    fi
                fi
            done < scripts/temp.txt

      - name: auto-commit-changes
        if: always()
        run: |
            chmod +x scripts/auto-commit-changes.sh
            scripts/auto-commit-changes.sh

      - name: End WireGuard VPN
        if: always() # どんな状態でも必ず実行する
        run: sudo wg-quick down wg0
