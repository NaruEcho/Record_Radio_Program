name: Transcribe MP3 Files

on:
#  schedule:
#    - cron: '0 6 * * 1-5'  # UTCで平日の午前6時（JSTで午後3時)
  workflow_dispatch:    # 手動トリガーを有効にする設定

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Generate matrix dynamically
        id: set-matrix
        run: |
          python3 << EOF
          import os
          import json
          directory = '.'
          audio_path = []
          for root, dirs, files in os.walk(directory):
              for file in files:
                  if file.endswith('.mp3'):
                      file_without_ext = os.path.splitext(file)[0]
                      srt_file = os.path.join(root, file_without_ext + '.srt')
                      audio_file = os.path.join(root, file_without_ext + '.mp3')
                      if not os.path.exists(srt_file):
                          audio_path.append(audio_file)
          matrix_arr = json.dumps({"path": audio_path})
          print(audio_path)
          with open(os.getenv('GITHUB_OUTPUT'), 'a') as output_file:
            output_file.write(f"matrix={matrix_arr}\n")
          EOF

  transcribe:
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path: ${{ fromJson(needs.generate_matrix.outputs.matrix).path }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: speech to text
        if: matrix.path != ''
        uses: appleboy/whisper-action@v0.1.1
        with:
          model: small
          audio_path: "${{ matrix.path }}"
          output_format: srt
          output_folder:  $(dirname "${{ matrix.path }}")
          print_progress: true
          translate: false

  commit:
    needs: transcribe
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: auto-commit-changes
        if: always()
        run: |
            chmod +x scripts/auto-commit-changes.sh
            scripts/auto-commit-changes.sh
