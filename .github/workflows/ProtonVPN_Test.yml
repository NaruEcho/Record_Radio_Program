name: ProtonVPN Test

on:
  workflow_dispatch:

jobs:
  proton-vpn-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Set up Proton VPN
        run: mkdir -p binary && wget -P binary https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.4_all.deb

      - name: Check repo package
        run: echo "62a9d849835de8a5664cf95329458bf1966780b15cec420bf707b5f7278b9027  binary/protonvpn-stable-release_1.0.4_all.deb" | sha256sum --check -

      - name: Install Proton VPN
        run: |
          sudo dpkg -i binary/protonvpn-stable-release_1.0.4_all.deb
          sudo apt update && sudo apt upgrade

      - name: Install tools
        run: |
          sudo apt install -y openvpn dialog expect
          python -m pip install --upgrade pip
          sudo pip install protonvpn-cli

      - name: ProtonVPN Login
        env: 
          PROTONVPN_OPENVPN_USERNAME: ${{ secrets.PROTONVPN_OPENVPN_USERNAME }}
          PROTONVPN_OPENVPN_PASSWORD: ${{ secrets.PROTONVPN_OPENVPN_PASSWORD }}
        run: |
          cat << 'EOF' > protonvpn_init_expect.sh
          #!/usr/bin/expect -f
          set timeout 10
          spawn sudo protonvpn init
          expect "Enter your ProtonVPN OpenVPN username:"
          send "$env(PROTONVPN_OPENVPN_USERNAME)\r"
          expect "Enter your ProtonVPN OpenVPN password:"
          send "$env(PROTONVPN_OPENVPN_PASSWORD)\r"
          expect {
            "Confirm your ProtonVPN OpenVPN password:" {
              send "$env(PROTONVPN_OPENVPN_PASSWORD)\r"
            }
          }
          expect "Your plan:"
          send "1\r"
          expect "Your choice:"
          send "1\r"
          expect "Is this information correct? [Y/n]:"
          send "y\r"
          EOF

      - name: Connect to ProtonVPN
        run: echo "test"
