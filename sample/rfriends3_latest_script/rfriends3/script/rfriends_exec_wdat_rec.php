<?php
 require_once("rf_inc.php"); require_once("rf_radiru.php"); require_once("rf_ondemand.php"); require_once("rf_downloader.php"); require_once("rf_reserve.php"); require_once("rf_menu_sub.php"); require_once("rf_gdrive.php"); $rfriends_mes = "ラジオ録音ツール"; if ($argc == 2) { $argpara = $argv[1]; $p = explode(",", $argpara); if (count_73($p) >= 5) { $ex_type = $p[0]; $ex_mode = $p[1]; $st = $p[2]; $cnt = $p[3]; $wdat = $p[4]; } else { echo_prn(1, "parameter error"); echo_prn(1, "para count : ".count_73($p)); echo_prn(1, "\"$argv[1]\""); exit; } } else { echo_prn(1, "parameter error argc( $argc )"); exit; } switch ($ex_type) { case $ex_radiru_vod: $exmes = "radiru_vod"; break; case $ex_radiru_gogaku: $exmes = "radiru_gogaku"; break; default: $exmes = "unknown"; break; } if ($st > 1) { $dt = $st; $st = -intval((time() - $dt)/3600/24); } else { $dt = strtotime("$st day"); } $dtdate = date("Y/m/d", $dt); fr_system_info($ex_type); echo_prn(1, ""); echo_prn(1, "para : ".$argpara); if ($cnt <= 0) { $period = "[all]"; } else { $period = "[$dtdate - recent]"; } $para_tm = start_prn(1, "Rfriends(wdat_rec) $exmes Start $period"); echo_prn(1,"radiru_vod_keyword_type : $radiru_vod_keyword_type"); echo_prn(1,""); echo_prn(1,"keywords(s) :"); echo_prn(1,""); $kwdat_ng = merge_keyword($ex_type,1); $kwdat = merge_keyword($ex_type,0); $daily = ""; switch ($ex_type) { case $ex_radiru_vod: $exmes = "radiru_vod"; $genre = $radiru_vod_genre; $recdir = $radiru_vod_recdir; $rftrans_type = $rftrans_radiru_vod; $id = "vod"; if ($ex_mode == 0) { break; } $mcode_sel = 0; $key = "radiru_ng_station"; $kw2 = rf_get_keyword($key); echo_prn(1, ""); echo_prn(1, "radiru_ng_station :"); echo_prn(1, ""); foreach ($kw2 as $val) { echo_prn(1, "$val"); } $nhk_ch = rf_nhk_list(); $voddat = array(); foreach($nhk_ch as $mcode_sel) { $voddat_t = radiru_vod_rsv_ex($radiru_vod_url, $dt, $cnt, $kwdat,$kwdat_ng, $mcode_sel, 0); $voddat = array_merge($voddat,$voddat_t); } $voddat = array_unique($voddat); $wdat = make_fn($exmes); rf_put_wdat_all_tmpdir($wdat, $voddat); break; case $ex_radiru_gogaku: $exmes = "radiru_gogaku"; $genre = $radiru_gogaku_genre; $recdir = $radiru_gogaku_recdir; $rftrans_type = $rftrans_radiru_gogaku; $id = "ggk"; if ($ex_mode == 0) { break; } $radiru_gogaku_code = get_gogaku_code(0); $mcode_sel = -1; $voddat = radiru_vod_rsv_ex($radiru_vod_url, $dt, $cnt, $kwdat,$kwdat_ng, $mcode_sel, 0); $wdat = make_fn($exmes); rf_put_wdat_all_tmpdir($wdat, $voddat); break; default: echo_prn(1, "parameter error $ex_type"); exit; break; } $fl = $tmpdir.$wdat.".dat"; echo_prn(1, " "); echo_prn(1, $fl); if (!file_exists($fl)) { echo_prn(1, "file not found ($fl)"); exit; } $str = file($fl, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES); fin_unlink($fl); echo_prn(1, ""); sort($str); foreach ($str as $str_s) { $para = get_para($str_s, $ex_type); if ($para == null) { $parts = explode(" ", $str_s, 17); $cnt = count_73($parts); echo_prn(1,"--- parameter error ($cnt)"); echo_prn(1,$str_s); continue; } $fromtime = $para[0]; $totime = $para[1]; $duration = $para[2]; $channel = $para[6]; $title = $para[7]; $artist = $para[8]; $kw = $para[10]; echo_prn(1, "$channel $fromtime $totime $title $artist $kw"); } $cnt_all = count_73($str); echo_prn(1, ""); echo_prn(1, "Program Count(s) : $cnt_all"); $st_tm = start_prn(1, "rfriends $exmes Start"); $rec_stp = 0; for ($i=0;$i<2;$i++) { $cnt_all = count_73($str); $cnt_allx = 0; $cnt_exist = 0; $cnt_download = 0; $cnt_err = 0; $cnt_radiru_del = 0; if ($i == 0) { echo_prn(1,""); stat_prn(1,"vmstat"); echo_prn(1,""); $secmes = "rfriends downloader(wdat) Ver. 1.5.0"; rf_disp_section($secmes, "+"); rf_trans_disp($ex_type); echo_prn(1, ""); $ret = clear_log_hour(4, $tmpdir, "{*.aac,*.m4a,*.mp3}", 1, 1, 0); echo_prn(1, "tmpdir data clear count : $ret"); } if ($i == 1) { echo_prn(1, ""); echo_prn(1, "[異常終了分を再実行します。]"); echo_prn(1, ""); } for ($j=0;$j<$cnt_all;$j++) { $bad = ""; $smart_wait = 0; $str_s = $str[$j]; if (substr($str_s,0,1) == "#") continue; $cnt_allx++; $para = get_para($str_s, $ex_type); if ($para == null) { continue; } $fromtime = $para[0]; $totime = $para[1]; $duration = $para[2]; $channel = $para[6]; $title = $para[7]; $artist = $para[8]; $img = $para[9]; $kw = $para[10]; $prg_no = $para[11]; $gen = $para[16]; $url = $prg_no; $sta = $channel; if ($radiru_callsign == 1) { $sta = get_radiru_callsign_new($channel); $para[6] = $sta; } $fn = $title; $fns = $artist; $dt = substr($fromtime, 0, 12)."_".substr($totime, 8,4); $pic = $img; $dt1 = substr($dt, 0, 8); $dt2 = substr($dt, 8, 4); $dt3 = substr($dt, 13, 4); $idfl = $dt1."_".$dt2."00_".$dt3."00_".$id; $dt1a = substr($dt1, 0, 4)."-".substr($dt1, 4, 2)."-".substr($dt1, 6, 2); $ext = $rec_extension; $out = fnam_edit($ex_type,$para); if ($kw == "manual") { $out = $out."_m"; } $out_fn = $recdir.$out; $tmpmfn = make_fn($idfl); $tmpfn = $tmpdir.$tmpmfn; $tmp = $tmpfn.".$ext"; rf_title_disp(1, "", "", $out,$gen); if (rf_check_double_rec($ex_type, $out, $ext, $channel, $fn, 0, 1) === true) { echo_prn(2, ""); echo_prn(2, "この番組はすでに録音済みです。"); $str[$j] = "#"; $cnt_exist++; $ret = rec_file_check($ex_type,$out, $ext, $channel, $fn); if ($ret === true) $cnt_radiru_del++; continue; } echo_prn(1,str_repeat("-",80)); $ret = rf_capacity_check($fromtime,$totime); if ($ret === false) { echo_prn(1, "十分な空き容量がありません。"); $cnt_err++; continue; } echo_prn(1,str_repeat("-",80)); $ffopt = rfgw_ffmpeg_opt($ex_type); $opt = sprintf($ffopt, $url); $exec_cmd = "ffmpeg -loglevel fatal $opt $tmp"; $ffmpeg_ver = rfgw_info_ffmpeg(); echo_prn(1, " "); echo_prn(1, $ffmpeg_ver); echo_prn(1, $exec_cmd); echo_prn(1, str_repeat("-", 40)); $logmes = "ffmpeg $out.$ext"; rf_error_log_ffmpeg("Start ",$logmes); echo_prn(1, "Downloading ..."); $now_st = time(); $ret = external_program($exec_cmd); $now_en = time(); rf_error_log_ffmpeg("End(".$ret.") ",$logmes); if ($ret != 0) { fin_unlink("$tmp"); echo_prn(1, "deleted $tmp"); $cnt_err++; echo_prn(1, ""); if (file_exists("$tmpfn.can")) { $bad = $loghead_cancel; $mes = "##### 要求により中止しました。 #####"; rf_error_message(-1, $ex_type, $mes, "$out.$ext", "$tmpmfn.$ext"); $rec_stp = 1; break 2; } else { $bad = $loghead_abnormal; $mes = "##### 異常終了しました。 #####"; rf_error_message(-1, $ex_type, $mes, "$out.$ext", "$tmpmfn.$ext"); continue; } } $ans = get_mediainfo("$tmpfn.$ext", "duration", "xml"); if ($ans == null) { $bad = $loghead_bad; $mes = "##### データ不良のため削除します。 #####"; rf_error_message(-1, $ex_type, $mes, "$out.$ext", "$tmpmfn.$ext"); fin_unlink("$tmpfn.$ext"); $cnt_err++; continue; } $duration = strtotime($totime) - strtotime($fromtime); if ($duration < 0) $duration += 3600*24; if ($duration == 0) $duration = $ans; rf_rate_disp($now_st, $now_en, $duration, "$tmpfn.$ext"); $diff_dur = $ans - $duration; $dur_hms = date("H:i:s", $duration + strtotime("1970/01/01")); $ans_hms = date("H:i:s", $ans + strtotime("1970/01/01")); echo_prn(1, ""); echo_prn(1, "duration : $duration ($dur_hms) -> $ans ($ans_hms)"); echo_prn(1, "diff     : $diff_dur sec(s)"); if ($diff_dur < -20) { $mes = "##### 早期終了または部分配信の可能性があります。 #####"; echo_prn(1, $mes); rf_error_log("$out.$ext"); rf_error_log($mes); if (($ex_type == $ex_radiru_vod) && ($radiru_vod_ignore_time == 1)) { $bad = $loghead_short; } } $para2 = array(); $para2[6] = $sta; $para2[7] = $fn; $para2[8] = $fns; $para2[9] = $pic; $ret = rf_space_check("$tmpfn.$ext"); if ($ret === true) { set_tag_img($ex_type, $tmpfn, $ext, $para, $para2,"",""); } else { echo_prn(1, "十分な空き容量がありません。(addtag)"); } echo_prn(1, str_repeat("-", 40)); echo_prn(1, "rfriends-info-start"); disp_mediainfo(1, "$tmpfn.$ext", "$out_fn.$ext"); if ($bad != "") { $out_fn = $recdir.$bad.$out; } $ret = rf_movefile("$tmpfn.$ext","$out_fn.$ext",1,$ex_type,$totime); if ($ret === false) { $mes = "##### コピー処理に失敗しました。 #####"; rf_error_message(-1, $ex_type, $mes, "$out.$ext", "$tmpmfn.$ext"); echo_prn(1, "rfriends-info-end"); $cnt_err++; continue; } if ($bad != "") { echo_prn(1, "rfriends-info-end"); $cnt_err++; continue; } rec_file_check($ex_type,$out, $ext, $channel, $fn); $fr = "$out_fn"; $to = "$out"; echo_prn(1, ""); echo_prn(1, "rfriends-file-name : $fr.$ext"); $ret = rftrans_job($ex_type, $fr, $ext, $to, $para,$para2); $smart_wait = 1; echo_prn(1, ""); echo_prn(1, "rfriends-info-end"); $str[$j] = "#"; $cnt_download++; if ($smart_wait == 1) { echo_prn(1, ""); time_prn(1, "sleep $radiru_vod_wait sec"); sleep($radiru_vod_wait); } } echo_prn(1, str_repeat("=", 80)); echo_prn(1,"正常終了 : $cnt_download"); echo_prn(1,"録音済   : $cnt_exist"); echo_prn(1,"異常終了 : $cnt_err"); echo_prn(1,"計       : $cnt_allx"); if ($ex_type == $ex_radiru_vod) { if (($radiru_vod_radiru_del == 1) || ($radiru_vod_radiru_del == 2)) { echo_prn(1, ""); echo_prn(1, "radiru 削除 : $cnt_radiru_del"); } if (($radiru_vod_radiru_del == 3) || ($radiru_vod_radiru_del == 4)) { echo_prn(1, ""); echo_prn(1, "radiru 移動 : $cnt_radiru_del"); } } echo_prn(1, str_repeat("=", 80)); if ($cnt_err <= 0) break; if ($rec_stp == 1) break; } $en_tm = start_prn(1, "Rfriends(wdat_rec) $exmes End"); rf_statistics($st_tm, $en_tm); exit; 